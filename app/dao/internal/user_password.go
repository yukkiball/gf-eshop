// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// UserPasswordDao is the manager for logic model data accessing and custom defined data operations functions management.
type UserPasswordDao struct {
	gmvc.M                     // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	C      userPasswordColumns // C is the short type for Columns, which contains all the column names of Table for convenient usage.
	DB     gdb.DB              // DB is the raw underlying database management object.
	Table  string              // Table is the underlying table name of the DAO.
}

// UserPasswordColumns defines and stores column names for table user_password.
type userPasswordColumns struct {
	Id             string //
	EncrptPassword string //
	UserId         string //
}

// NewUserPasswordDao creates and returns a new DAO object for table data access.
func NewUserPasswordDao() *UserPasswordDao {
	columns := userPasswordColumns{
		Id:             "id",
		EncrptPassword: "encrpt_password",
		UserId:         "user_id",
	}
	return &UserPasswordDao{
		C:     columns,
		M:     g.DB("default").Model("user_password").Safe(),
		DB:    g.DB("default"),
		Table: "user_password",
	}
}
