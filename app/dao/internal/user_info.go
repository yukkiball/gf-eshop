// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// UserInfoDao is the manager for logic model data accessing and custom defined data operations functions management.
type UserInfoDao struct {
	gmvc.M                 // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	C      userInfoColumns // C is the short type for Columns, which contains all the column names of Table for convenient usage.
	DB     gdb.DB          // DB is the raw underlying database management object.
	Table  string          // Table is the underlying table name of the DAO.
}

// UserInfoColumns defines and stores column names for table user_info.
type userInfoColumns struct {
	Id           string //
	Name         string //
	Gender       string // //1代表男性，2代表女性
	Age          string //
	Telphone     string //
	RegisterMode string // //byphone, bywechat, by alipay
	ThirdPartyId string //
}

// NewUserInfoDao creates and returns a new DAO object for table data access.
func NewUserInfoDao() *UserInfoDao {
	columns := userInfoColumns{
		Id:           "id",
		Name:         "name",
		Gender:       "gender",
		Age:          "age",
		Telphone:     "telphone",
		RegisterMode: "register_mode",
		ThirdPartyId: "third_party_id",
	}
	return &UserInfoDao{
		C:     columns,
		M:     g.DB("default").Model("user_info").Safe(),
		DB:    g.DB("default"),
		Table: "user_info",
	}
}
