// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// ItemDao is the manager for logic model data accessing and custom defined data operations functions management.
type ItemDao struct {
	gmvc.M             // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	C      itemColumns // C is the short type for Columns, which contains all the column names of Table for convenient usage.
	DB     gdb.DB      // DB is the raw underlying database management object.
	Table  string      // Table is the underlying table name of the DAO.
}

// ItemColumns defines and stores column names for table item.
type itemColumns struct {
	Id          string //
	Title       string //
	Price       string //
	Description string //
	Sales       string //
	ImgUrl      string //
}

// NewItemDao creates and returns a new DAO object for table data access.
func NewItemDao() *ItemDao {
	columns := itemColumns{
		Id:          "id",
		Title:       "title",
		Price:       "price",
		Description: "description",
		Sales:       "sales",
		ImgUrl:      "img_url",
	}
	return &ItemDao{
		C:     columns,
		M:     g.DB("default").Model("item").Safe(),
		DB:    g.DB("default"),
		Table: "item",
	}
}
