// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// ItemStockDao is the manager for logic model data accessing and custom defined data operations functions management.
type ItemStockDao struct {
	gmvc.M                  // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	C      itemStockColumns // C is the short type for Columns, which contains all the column names of Table for convenient usage.
	DB     gdb.DB           // DB is the raw underlying database management object.
	Table  string           // Table is the underlying table name of the DAO.
}

// ItemStockColumns defines and stores column names for table item_stock.
type itemStockColumns struct {
	Id     string //
	Stock  string //
	ItemId string //
}

// NewItemStockDao creates and returns a new DAO object for table data access.
func NewItemStockDao() *ItemStockDao {
	columns := itemStockColumns{
		Id:     "id",
		Stock:  "stock",
		ItemId: "item_id",
	}
	return &ItemStockDao{
		C:     columns,
		M:     g.DB("default").Model("item_stock").Safe(),
		DB:    g.DB("default"),
		Table: "item_stock",
	}
}
